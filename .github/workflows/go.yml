# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

# Название рабочего процесса
name: Go

# Условие запуска
on:
  # Запуск по событию "push" (заливка изменений в ветку)
  push:
  # Указывает, что нужно запускать рабочий процесс, только если событие относится к ветке main
    branches: [ "main" ]
  # Запуск по событию "pull_request". Поле "types" не указано, поэтому учитываются события по открытию, переоткрытию пул-реквеста и изменению в ветке.
  pull_request:
    # Указывает, что нужно запускать рабочий процесс, только если событие относится к ветке main
    branches: [ "main" ]

# Задания
jobs:
  # Задание с идентификатором "build"
  build:
    # Для запуска задания используется раннер "ubuntu-latest", что соответствует последней версии Ubuntu
    runs-on: ubuntu-latest
    # Шаги задания
    steps:
    # шаг с именем "Checkout Go"
    - name: Checkout Go
    # Первый шаг использует действие "actions/checkout@v4", которое извлекает репозиторий для дальнейшей работы с ним
      uses: actions/checkout@v4
      # шаг с именем "Set up Docker"

    - name: Build and Test with Docker 
      run: | 
        docker pull your-docker-image:tag 
        docker run --rm -v ${{ github.workspace }}:/workspace -w /workspace your-docker-image:tag sh -c "apk add --no-cache go && go build -v ./..."

    # шаг с именем "Test"
    - name: Test
      # этот шаг выполняет команду 'go test -v ./...'
      run: go test -v ./...
